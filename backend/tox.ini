
[tox]
envlist = build,test
skip_missing_interpreters = true
minversion = 2.9


[testenv]
setenv =
  KNOWLEDGE_IS_POWER = eyJWYWxpZFVudGlsIjogMH0=:ZaSUeaeicjVog5cRcNsqg3AeDeZtIhr4I2vgTYWHQSZuC44Ps1L4MIE/MX2TBvmWKxsgMVLSOm673ZxgGbRqbDkH4n2ZtukqV7uw4olNLX5NWemlYdz1uEidmErj0YDNvge2xnnoW6abO0ImStfNhAk4W57CQ2W+j4GV+8p+dfp9AoWRMkg+VKDwo908E7Ez3h0GBTtiOBNN7VKVi2lUc0aAJUgU+oGpPqn6DNDdYfZQgXMSJhWJr2K9RLI2G/MjKJu8A8hHtTAQIQXSMQwyl+F+IDh8Qjqi9aFFbEAPCxMgcg24alOom/ioYAzWt+9u5g5UR9xaXjrVO43Hr9bIWg==
  DJANGO_REQUEST_DEFAULT_CLIENT_IP=127.0.0.1


[testenv:mypy]
description = "Check static typing"
skip_install = true
deps = mypy
       typing
       types-mock
       pytest-fixture-typecheck
       types-six
commands = python .config/mypy/mypy_check.py


[testenv:spell]
description = "Check code for Grammar mistakes"
skip_install = true
deps = codespell
commands = codespell --ignore-words=.config/codespell_ignore.txt --skip="*.pyc,*.png,*.jpg,*.ods,*.raw,*.pdf,*.pcap,*.js,*.html,*.der,*_build*,*inet6.py,*dhcp6.py,*.ipynb,*.svg,*.gif,*.obs,*.gz" backend/ core/ scanner/


[testenv:flake8]
description = "Check code style & quality"
skip_install = true
deps = flake8
commands = flake8 backend/ core/ scanner/ --exclude */migrations/*

[testenv:test]
description = "Test the package"
deps = -rrequirements.txt
passenv = VCAN_INTERFACE
commands_pre = {envpython} ../utils/add_system_arch_suffix_to_binary.py ../scanner-backend/dist
commands = pytest test/findings_test.py test/scanner_test.py test/enums_test.py test/license_test.py -s

[testenv:build]
description = "Build the package"
deps = -rrequirements.txt
commands = python -m PyInstaller --clean --workpath binary/build --distpath binary/dist backend.spec

[testenv:test_data_gen]
description = "Test the package"
deps = -rrequirements.txt
passenv = VCAN_INTERFACE
commands_pre = {envpython} ../utils/add_system_arch_suffix_to_binary.py ../scanner-backend/dist
commands = pytest test/testdata_generation_test.py -s

[testenv:retest]
description = "Test the package"
deps = -rrequirements.txt
passenv = VCAN_INTERFACE
commands =
  pytest {posargs}

[testenv:hiltest_bmw_bdc]
description = "HIL test the package"
sitepackages = true
passenv = NIGHTLY_BUILD
skipsdist = true
deps = -rrequirements.txt
       intelhex
commands_pre = {envpython} ../utils/add_system_arch_suffix_to_binary.py ../scanner-backend/dist
commands = {envpython} -m pytest -s test/hil_test_bmw_bdc.py {posargs}

[testenv:hiltest_audi_cgw3]
description = "HIL test the package"
sitepackages = true
passenv = NIGHTLY_BUILD
skipsdist = true
deps = -rrequirements.txt
       intelhex
commands_pre = {envpython} ../utils/add_system_arch_suffix_to_binary.py ../scanner-backend/dist
commands = {envpython} -m pytest -s test/hil_test_audi_cgw3.py {posargs}

[testenv:hiltest_tesla_airbag]
description = "HIL test the package"
sitepackages = true
passenv = NIGHTLY_BUILD
skipsdist = true
deps = -rrequirements.txt
       intelhex
commands_pre = {envpython} ../utils/add_system_arch_suffix_to_binary.py ../scanner-backend/dist
commands = {envpython} -m pytest -s test/hil_test_tesla_airbag.py {posargs}

[testenv:hiltest_mercedes]
description = "HIL test the package"
sitepackages = true
passenv = NIGHTLY_BUILD
skipsdist = true
deps = -rrequirements.txt
       intelhex
commands_pre = {envpython} ../utils/add_system_arch_suffix_to_binary.py ../scanner-backend/dist
commands = {envpython} -m pytest -s test/hil_test_mercedes.py {posargs}

[testenv:hiltest_bosch_bcm]
description = "HIL test the package"
sitepackages = true
passenv = NIGHTLY_BUILD
skipsdist = true
deps = -rrequirements.txt
       intelhex
commands_pre = {envpython} ../utils/add_system_arch_suffix_to_binary.py ../scanner-backend/dist
commands = {envpython} -m pytest -s test/hil_test_bosch_bcm.py {posargs}

[flake8]
max-line-length = 150

[pytest]
DJANGO_SETTINGS_MODULE = backend.settings
# -- recommended but optional:
testpaths = ["test"]
