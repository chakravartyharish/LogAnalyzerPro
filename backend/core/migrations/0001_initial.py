# Generated by Django 4.0.4 on 2023-03-31 12:45

import core.models
import core.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('company', models.CharField(blank=True, default='', max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HWInterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('CAN', 'CAN Interface')], max_length=100)),
                ('subtype', models.CharField(choices=[('Vector', 'Vector CAN interface'), ('PCAN', 'Peak CAN interface'), ('SocketCAN', 'Linux kernel SocketCAN interface'), ('GS', 'Geschwister Schneider USB/CAN (aka candleLight)'), ('SLCAN', 'Serial Line CAN')], max_length=100)),
                ('state', models.CharField(choices=[('AVAILABLE', 'The interface is currently available'), ('UNAVAILABLE', 'The interface is currently not available')], default='AVAILABLE', max_length=100)),
                ('config', models.JSONField(default=dict, max_length=4096, validators=[core.validators.validate_hw_interface_config])),
                ('current_device_path', models.JSONField(default=dict, max_length=1024, validators=[core.validators.validate_hw_interface_config])),
                ('extended_state', models.JSONField(default=dict, max_length=1024)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['category', 'subtype', 'state', 'created_at', 'updated_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('CREATED', 'The message was created'), ('PRESENTED', 'The message was presented to the user'), ('ACKNOWLEDGED', 'The message was acknowledged by the user')], default='CREATED', max_length=100)),
                ('title', models.CharField(default='Important Message', max_length=100)),
                ('message', models.CharField(max_length=1024)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_data', models.CharField(max_length=16384)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_text', models.CharField(max_length=1000)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BackendEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_identifier', models.CharField(default=core.models.random_unique_identifier, max_length=100, unique=True)),
                ('type', models.CharField(choices=[('HWIF', 'Hardware Interface'), ('SCANNER', 'Scanner'), ('GENERAL', 'General')], default='GENERAL', max_length=100)),
                ('level', models.CharField(choices=[('FATAL_ERROR', 'Fatal Error'), ('ERROR', 'Error'), ('WARNING', 'Warning'), ('INFO', 'Info'), ('DEBUG', 'Debug'), ('VERBOSE', 'Verbose')], default='INFO', max_length=100)),
                ('template', models.CharField(max_length=1024)),
                ('extras', models.JSONField(default=dict, max_length=1024)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
